{"version":3,"file":"ngx-hm-carousel.umd.js.map","sources":["ng://ngx-hm-carousel/lib/ngx-hm-carousel-dynamic.directive.ts","ng://ngx-hm-carousel/lib/ngx-hm-carousel-item.directive.ts","ng://ngx-hm-carousel/lib/rxjs.observable.resize.ts","ng://ngx-hm-carousel/lib/ngx-hm-carousel.component.ts","ng://ngx-hm-carousel/lib/ngx-hm-carousel.module.ts"],"sourcesContent":["import { Directive, Input, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[ngxHmCarouselDynamic]'\r\n})\r\nexport class NgxHmCarouselDynamicDirective implements OnInit {\r\n\r\n  @Input('ngxHmCarouselDynamic') index: number;\r\n  @Input('ngxHmCarouselDynamicLength') length: number;\r\n  @Input('ngxHmCarouselDynamicIndex')\r\n\r\n  set currentI(value: number) {\r\n    if (!this.compelete) {\r\n\r\n      const nextI = value + 1;\r\n      const prevI = value - 1;\r\n\r\n      if (\r\n        this.index === 0 ||\r\n        this.index === this.length - 1 ||\r\n        this.index === nextI ||\r\n        this.index === prevI ||\r\n        this.index === value) {\r\n        this._view.createEmbeddedView(this._template);\r\n        this.compelete = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  private compelete = false;\r\n  constructor(\r\n    private _view: ViewContainerRef,\r\n    private _template: TemplateRef<any>) {\r\n    this._view.clear();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { Directive, EventEmitter, Output } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[ngx-hm-carousel-item]'\r\n})\r\nexport class NgxHmCarouselItemDirective {\r\n  @Output('ngx-hm-carousel-item') clickEvent = new EventEmitter<number>();\r\n\r\n  constructor() { }\r\n\r\n}\r\n","import ResizeObserver from 'resize-observer-polyfill';\r\nimport { Observable, Subscriber } from 'rxjs';\r\nimport { debounceTime, tap, finalize } from 'rxjs/operators';\r\n\r\n/**\r\n * An observable creator for element resize.\r\n * @param elm the watch element.\r\n * @param cb when resize complete, call back function.\r\n * @param time resize emit time, default is 200\r\n */\r\nexport function resizeObservable(elm: HTMLElement, cb: () => void, time = 200): Observable<any> {\r\n  let elmObserve$: ResizeObserver;\r\n  return Observable.create((observer: Subscriber<any>) => {\r\n    elmObserve$ = new ResizeObserver((entries, obs) => {\r\n      observer.next(elmObserve$);\r\n    });\r\n    elmObserve$.observe(elm);\r\n  }).pipe(\r\n    debounceTime(time),\r\n    tap(() => {\r\n      cb();\r\n    }),\r\n    finalize(() => {\r\n      elmObserve$.unobserve(elm);\r\n      elmObserve$.disconnect();\r\n    })\r\n  );\r\n}\r\n","import { isPlatformBrowser } from '@angular/common';\r\nimport {\r\n  AfterContentInit,\r\n  AfterViewInit,\r\n  Component,\r\n  ContentChild,\r\n  ContentChildren,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Inject,\r\n  Input,\r\n  OnDestroy,\r\n  Output,\r\n  PLATFORM_ID,\r\n  QueryList,\r\n  Renderer2,\r\n  TemplateRef,\r\n  ViewChild,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport { BehaviorSubject, Observable, fromEvent, interval, merge, Subject, Subscription } from 'rxjs';\r\nimport { bufferCount, debounceTime, switchMap, takeUntil, tap } from 'rxjs/operators';\r\n\r\nimport { NgxHmCarouselItemDirective } from './ngx-hm-carousel-item.directive';\r\nimport { resizeObservable } from './rxjs.observable.resize';\r\n\r\n// if the pane is paned .25, switch to the next pane.\r\nconst PANBOUNDARY = 0.15;\r\n\r\n@Component({\r\n  selector: 'ngx-hm-carousel',\r\n  template: `<div #parentChild class=\"carousel\">\r\n  <ng-content select=\"[ngx-hm-carousel-container]\"></ng-content>\r\n  <!-- left -->\r\n  <div #prev *ngIf=\"contentPrev\"\r\n    class=\"direction left\">\r\n    <ng-container *ngTemplateOutlet=\"contentPrev\"></ng-container>\r\n  </div>\r\n  <!--  right -->\r\n  <div #next *ngIf=\"contentNext\"\r\n    class=\"direction right\">\r\n    <ng-container *ngTemplateOutlet=\"contentNext\"></ng-container>\r\n  </div>\r\n  <!-- indicators -->\r\n  <ul class=\"indicators\" *ngIf=\"dotElm\">\r\n    <li\r\n      *ngFor=\"let dot of dots; let i = index;\"\r\n      (click)=\"setIndex(i)\">\r\n      <ng-container\r\n        *ngTemplateOutlet=\"dotElm, context: {\r\n          $implicit: {\r\n            index : i,\r\n            currentIndex : currentIndex\r\n          }\r\n        }\">\r\n      </ng-container>\r\n    </li>\r\n  </ul>\r\n  <!-- progress -->\r\n  <div *ngIf=\"progressElm && autoplay\">\r\n    <ng-container\r\n      *ngTemplateOutlet=\"progressElm, context: {\r\n        $implicit: {\r\n          progress:progressWidth\r\n        }\r\n      }\">\r\n    </ng-container>\r\n  </div>\r\n</div>\r\n`,\r\n  styles: [`:host{display:block;height:100%}.ngx-hm-carousel-display-npwrap{display:flex!important;flex-wrap:nowrap!important;flex-direction:row!important;overflow:hidden!important}.carousel{overflow:hidden;position:relative;width:100%;height:100%}.carousel ul.indicators{list-style:none;bottom:1rem;left:0;margin:0;padding:0;position:absolute;text-align:center;width:100%}.carousel ul.indicators li{cursor:pointer;display:inline-block;position:relative;padding:.5rem}.carousel .direction{position:absolute;height:100%;display:flex;align-items:center;justify-content:center;top:0}.carousel .direction.left{left:0}.carousel .direction.right{position:absolute;right:0}.transition{transition:all .4s ease-in-out}.grab{cursor:-webkit-grab;cursor:grab}.grabbing{cursor:-webkit-grabbing;cursor:grabbing}.pointer{cursor:pointer}`],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class NgxHmCarouselComponent implements AfterViewInit, AfterContentInit, OnDestroy {\r\n  @ViewChild('parentChild') parentChild;\r\n  @ViewChild('prev') private btnPrev: ElementRef;\r\n  @ViewChild('next') private btnNext: ElementRef;\r\n  @ContentChildren(NgxHmCarouselItemDirective) items: QueryList<NgxHmCarouselItemDirective>;\r\n  @ContentChild('carouselPrev') contentPrev: TemplateRef<any>;\r\n  @ContentChild('carouselNext') contentNext: TemplateRef<any>;\r\n  @ContentChild('carouselDot') dotElm: TemplateRef<any>;\r\n  @ContentChild('carouselProgress') progressElm: TemplateRef<any>;\r\n\r\n  @Input('aniTime') aniTime = 400;\r\n  @Input('align') align: 'left' | 'center' | 'right' = 'center';\r\n  @Input('infinite') infinite = false;\r\n  @Input('mourse-enable') mourseEnable = false;\r\n  @Input('autoplay-speed') speed = 5000;\r\n  @Input('between-delay') delay = 8000;\r\n  @Input('autoplay-direction') direction: 'left' | 'right' = 'right';\r\n  @Input('show-num')\r\n  set showNum(value: number | 'auto') {\r\n    if (value === 'auto') {\r\n      this.isAutoNum = true;\r\n    } else {\r\n      this._showNum = value;\r\n    }\r\n  }\r\n  get showNum() {\r\n    return this._showNum;\r\n  }\r\n  @Input('scroll-num') scrollNum = 1;\r\n  @Input('drag-many') isDragMany = false;\r\n  @Input('current-index')\r\n  set currentIndex(value) {\r\n    // if now index if not equale to save index, do someting\r\n    if (this.currentIndex !== value) {\r\n      this._currentIndex = value;\r\n\r\n      if (this.itemsElm) {\r\n        if (this.autoplay && !this.isFromAuto) {\r\n          this.stopEvent.next();\r\n          this.restart.next(null);\r\n        }\r\n        this.drawView(this.currentIndex);\r\n      }\r\n    }\r\n    this.isFromAuto = false;\r\n  }\r\n  get currentIndex() {\r\n    return this._currentIndex;\r\n  }\r\n\r\n  @Input('autoplay')\r\n  set autoplay(value) {\r\n    if (isPlatformBrowser(this.platformId)) {\r\n      if (this.itemsElm) {\r\n        this.progressWidth = 0;\r\n        if (value) {\r\n          this.doNextSub$ = this.doNext.subscribe();\r\n        } else {\r\n          if (this.doNextSub$) { this.doNextSub$.unsubscribe(); }\r\n        }\r\n      }\r\n    }\r\n    this._autoplay = value;\r\n  }\r\n  get autoplay() {\r\n    return this._autoplay;\r\n  }\r\n\r\n  @Output('index-change') indexChanged = new EventEmitter();\r\n  set progressWidth(value) {\r\n    if (this.progressElm !== undefined && this.autoplay) {\r\n      this._porgressWidth = value;\r\n    }\r\n  }\r\n  get progressWidth() {\r\n    return this._porgressWidth;\r\n  }\r\n\r\n  private isFromAuto = true;\r\n  private _currentIndex = 0;\r\n  private _showNum = 1;\r\n  private isAutoNum = false;\r\n  private _autoplay = false;\r\n  private _porgressWidth = 0;\r\n\r\n  private rootElm: HTMLElement;\r\n  private alignDistance = 0;\r\n  private containerElm: HTMLElement;\r\n  private itemsElm: Array<HTMLElement>;\r\n  private lastIndex = 0;\r\n  private hammer: HammerManager;\r\n  private elmWidth = 0;\r\n  private container_left = 0;\r\n\r\n  private mouseOnContainer = false;\r\n  private restart = new BehaviorSubject<any>(null);\r\n  private stopEvent = new Subject<any>();\r\n\r\n  private doNext: Observable<any>;\r\n  private doNextSub$: Subscription;\r\n  private elmSub$: Subscription;\r\n\r\n  private firstElm_clone;\r\n  private LatestElm_clone;\r\n  private prePanMove: boolean;\r\n  public dots: Array<number>;\r\n  private nextListener: () => void;\r\n  private prevListener: () => void;\r\n\r\n  constructor(\r\n    @Inject(PLATFORM_ID) private platformId: Object,\r\n    private _renderer: Renderer2) { }\r\n\r\n  ngAfterContentInit(): void {\r\n    this.initVariable();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.setViewWidth(true);\r\n    this.reSetVariable();\r\n    this.hammer = this.bindHammer();\r\n    this.drawView(this.currentIndex);\r\n    this.bindClick();\r\n\r\n    if (this.autoplay || this.infinite) {\r\n      this.addInfiniteElm();\r\n    }\r\n\r\n    this.elmSub$ = resizeObservable(this.rootElm, () => this.containerResize()).subscribe();\r\n  }\r\n\r\n  private addInfiniteElm() {\r\n    this.firstElm_clone = this.itemsElm[this.lastIndex].cloneNode(true) as HTMLElement;\r\n    this.addStyle(this.firstElm_clone, {\r\n      position: 'absolute',\r\n      transform: 'translateX(-100%)'\r\n    });\r\n\r\n\r\n    this.LatestElm_clone = this.itemsElm[0].cloneNode(true) as HTMLElement;\r\n    this.addStyle(this.LatestElm_clone, {\r\n      position: 'absolute',\r\n      right: 0,\r\n      top: 0,\r\n      transform: 'translateX(100%)'\r\n    });\r\n\r\n    this._renderer.insertBefore(this.containerElm, this.firstElm_clone, this.itemsElm[0]);\r\n    this._renderer.appendChild(this.containerElm, this.LatestElm_clone);\r\n  }\r\n\r\n  private containerResize() {\r\n    this.reSetVariable();\r\n    this.setViewWidth();\r\n\r\n    // å çºä¸è½æ»äºï¼æä»¥è¦åå°ç¬¬ä¸åï¼ä»¥ç¢ºä¿å¨é¨é½æé¡¯ç¤º\r\n    if (this.showNum >= this.itemsElm.length) {\r\n      this.currentIndex = 0;\r\n    }\r\n    this.drawView(this.currentIndex, false);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.btnNext && this.btnPrev) {\r\n      this.nextListener();\r\n      this.prevListener();\r\n    }\r\n    this.hammer.destroy();\r\n    if (this.autoplay) {\r\n      this.doNextSub$.unsubscribe();\r\n    }\r\n\r\n    this.elmSub$.unsubscribe();\r\n  }\r\n\r\n  setIndex(i) {\r\n    this.currentIndex = i;\r\n  }\r\n\r\n  private initVariable() {\r\n    this.rootElm = this.parentChild.nativeElement;\r\n    this.containerElm = this.rootElm.children[0] as HTMLElement;\r\n    this.itemsElm = Array.from(this.containerElm.children) as HTMLElement[];\r\n    this.lastIndex = this.itemsElm.length - 1;\r\n\r\n    if (this.dotElm) {\r\n      this.dots = new Array(this.itemsElm.length);\r\n    }\r\n\r\n    let startEvent = this.restart.asObservable();\r\n    let stopEvent = this.stopEvent.asObservable();\r\n    if (this.mourseEnable) {\r\n      startEvent = merge(\r\n        startEvent,\r\n        fromEvent(this.containerElm, 'mouseleave').pipe(\r\n          tap(() => this.mouseOnContainer = false)\r\n        )\r\n      );\r\n      stopEvent = merge(\r\n        stopEvent,\r\n        fromEvent(this.containerElm, 'mouseover').pipe(\r\n          tap(() => this.mouseOnContainer = true)\r\n        )\r\n      );\r\n    }\r\n\r\n    this.doNext = startEvent.pipe(\r\n      debounceTime(this.delay),\r\n      switchMap(() =>\r\n        this.runProgress(20).pipe(\r\n          tap(() => {\r\n            this.isFromAuto = true;\r\n            // console.log('next');\r\n            if (this.direction === 'left') {\r\n              this.currentIndex -= this.scrollNum;\r\n            } else {\r\n              this.currentIndex += this.scrollNum;\r\n            }\r\n          }),\r\n          takeUntil(stopEvent.pipe(tap(() => this.progressWidth = 0))\r\n          )\r\n        )\r\n      ));\r\n\r\n    if (this.autoplay) {\r\n      this.doNextSub$ = this.doNext.subscribe();\r\n    }\r\n  }\r\n\r\n  private reSetVariable() {\r\n    this.container_left = this.rootElm.getBoundingClientRect().left;\r\n    if (this.showNum && this.showNum !== 1) {\r\n      switch (this.align) {\r\n        case 'center':\r\n          this.alignDistance = (this.rootElm.clientWidth - this.elmWidth) / 2;\r\n          break;\r\n        case 'left':\r\n          this.alignDistance = 0;\r\n          break;\r\n        case 'right':\r\n          this.alignDistance = this.rootElm.clientWidth - this.elmWidth;\r\n          break;\r\n      }\r\n    }\r\n    // console.log(this.alignDistance);\r\n  }\r\n\r\n  private setViewWidth(isInit?: boolean) {\r\n    if (this.isAutoNum) {\r\n      this._showNum = this.getAutoNum();\r\n    }\r\n    this._renderer.addClass(this.containerElm, 'grab');\r\n    // when init check view has scroll bar\r\n    const totalWidth = 0;\r\n    if (isInit) {\r\n      // remain one elm height\r\n      this._renderer.addClass(this.containerElm, 'ngx-hm-carousel-display-npwrap');\r\n    }\r\n    this.elmWidth = (totalWidth + this.rootElm.clientWidth) / this._showNum;\r\n\r\n    this._renderer.removeClass(this.containerElm, 'ngx-hm-carousel-display-npwrap');\r\n    this._renderer.setStyle(this.containerElm, 'width', `${this.elmWidth * this.itemsElm.length}px`);\r\n    this._renderer.setStyle(this.containerElm, 'position', 'relative');\r\n    this.itemsElm.forEach((elm: HTMLElement, index) => {\r\n      this._renderer.setStyle(elm, 'width', `${this.elmWidth}px`);\r\n    });\r\n\r\n    if (this.firstElm_clone) {\r\n      this._renderer.setStyle(this.firstElm_clone, 'width', `${this.elmWidth}px`);\r\n      this._renderer.setStyle(this.LatestElm_clone, 'width', `${this.elmWidth}px`);\r\n    }\r\n  }\r\n\r\n  private bindHammer() {\r\n    const hm = new Hammer(this.containerElm);\r\n    hm.get('pan').set({ direction: Hammer.DIRECTION_HORIZONTAL });\r\n\r\n    hm.on('panleft panright panend tap', (e: HammerInput) => {\r\n      this._renderer.removeClass(this.containerElm, 'transition');\r\n      this._renderer.addClass(this.containerElm, 'grabbing');\r\n      if (this.autoplay) {\r\n        this.stopEvent.next();\r\n      }\r\n      // console.log(e.type);\r\n      switch (e.type) {\r\n        case 'tap':\r\n          this.callClick(e.center.x);\r\n          this.callRestart();\r\n          this._renderer.removeClass(this.containerElm, 'grabbing');\r\n          break;\r\n        case 'panleft':\r\n        case 'panright':\r\n\r\n          // é¡¯ç¤ºç¸½æ¸éå°æ¼ç¸½æ¸éï¼åæ­¢æ»å\r\n          if (this.showNum >= this.itemsElm.length) {\r\n            this.hammer.stop(true);\r\n            return;\r\n          }\r\n          // console.log(e.deltaY);\r\n          this.prePanMove = false;\r\n          if (Math.abs(e.deltaY) > 50) { return; }\r\n          // Slow down at the first and last pane.\r\n          if (!(this.autoplay || this.infinite) && this.outOfBound(e.type)) {\r\n            e.deltaX *= 0.2;\r\n          }\r\n\r\n          this._renderer.setStyle(this.containerElm, 'left', `${-this.currentIndex * this.elmWidth + this.alignDistance + e.deltaX}px`);\r\n\r\n          if (!this.isDragMany) {\r\n            if (Math.abs(e.deltaX) > this.elmWidth * 0.5) {\r\n              if (e.deltaX > 0) {\r\n                this.currentIndex -= this.scrollNum;\r\n              } else {\r\n                this.currentIndex += this.scrollNum;\r\n              }\r\n              this._renderer.removeClass(this.containerElm, 'grabbing');\r\n              this.callRestart();\r\n              this.hammer.stop(true);\r\n              // remember prv action, to avoid hammer stop, then click\r\n              this.prePanMove = true;\r\n            }\r\n          }\r\n          break;\r\n        case 'panend':\r\n          this.callRestart();\r\n\r\n          this._renderer.removeClass(this.containerElm, 'grabbing');\r\n          if (Math.abs(e.deltaX) > this.elmWidth * PANBOUNDARY) {\r\n            const moveNum = this.isDragMany ?\r\n              Math.ceil(Math.abs(e.deltaX) / this.elmWidth) : this.scrollNum;\r\n\r\n            let prevIndex = this.currentIndex - moveNum;\r\n            let nextIndex = this.currentIndex + moveNum;\r\n\r\n            // å¦æä¸æ¯ç¡éå¾ªç°ï¼ä¸è½å¤§æ¼æå°æ¼\r\n\r\n            if (e.deltaX > 0) {\r\n              if (!(this.autoplay || this.infinite) && prevIndex < 0) {\r\n                prevIndex = 0;\r\n                this.drawView(0);\r\n              }\r\n\r\n              this.currentIndex = prevIndex;\r\n            } else {\r\n              if (!(this.autoplay || this.infinite) && nextIndex > this.lastIndex - this._showNum + 1) {\r\n                nextIndex = this.lastIndex - this._showNum + 1;\r\n                this.drawView(nextIndex);\r\n              }\r\n              this.currentIndex = nextIndex;\r\n            }\r\n            break;\r\n          } else {\r\n            if (!this.isDragMany && this.prePanMove) {\r\n              this.callClick(e.center.x);\r\n            }\r\n          }\r\n          // console.log(this.currentIndex);\r\n          this.drawView(this.currentIndex);\r\n          this.prePanMove = false;\r\n          break;\r\n      }\r\n    });\r\n\r\n    return hm;\r\n  }\r\n\r\n  private bindClick() {\r\n    if (this.btnNext && this.btnPrev) {\r\n      this.nextListener = this._renderer.listen(this.btnNext.nativeElement, 'click', () => {\r\n        this.currentIndex++;\r\n      });\r\n      this.prevListener = this._renderer.listen(this.btnPrev.nativeElement, 'click', () => {\r\n        this.currentIndex--;\r\n      });\r\n    }\r\n  }\r\n\r\n  private callRestart() {\r\n    if (this.autoplay && !this.mouseOnContainer) {\r\n      this.restart.next(null);\r\n    }\r\n  }\r\n\r\n  private callClick(positionX) {\r\n    // click position subtract the containerlef and alignDistance is the move distance\r\n    const toIndex = this.currentIndex + Math.floor((positionX - this.container_left - this.alignDistance) / this.elmWidth);\r\n\r\n    const elm = this.items.toArray()[toIndex];\r\n    if (elm) {\r\n      elm.clickEvent.emit(toIndex);\r\n    }\r\n  }\r\n\r\n  private drawView(index: number, isEmit = true) {\r\n    const lastIndex = this.lastIndex;\r\n\r\n    if (this.autoplay || this.infinite) {\r\n      if (index < 0) {\r\n        this._currentIndex = lastIndex;\r\n      } else if (index > lastIndex) {\r\n        this._currentIndex = 0;\r\n      }\r\n    } else {\r\n      this._currentIndex = Math.max(0, Math.min(index, this.lastIndex));\r\n    }\r\n\r\n    // åªæç¶å¤§æ¼1æè¦ç§»å\r\n    if (this.itemsElm.length > 1) {\r\n      const leftDistance = (index * this.elmWidth) - this.alignDistance;\r\n\r\n      this._renderer.setStyle(this.containerElm, 'left', `${-leftDistance}px`);\r\n      if (isEmit) {\r\n        this._renderer.addClass(this.containerElm, 'transition');\r\n        this.indexChanged.emit(this.currentIndex);\r\n      } else {\r\n        this._renderer.removeClass(this.containerElm, 'transition');\r\n      }\r\n\r\n      // å¦ææ¯å¾ªç°çï¼ç¶åç«çµæå·å·çè·³å°ç¶åçindexãleftå»\r\n      this.InfiniteHandler(index, lastIndex);\r\n    } else {\r\n      this._renderer.setStyle(this.containerElm, 'left', `${this.alignDistance}px`);\r\n    }\r\n\r\n  }\r\n\r\n  private InfiniteHandler(index: number, lastIndex: number) {\r\n    if ((this.autoplay || this.infinite)) {\r\n      setTimeout(() => {\r\n        this._renderer.removeClass(this.containerElm, 'transition');\r\n        // å¦ææ¯å¾ªç°çï¼ç¶åç«çµæå·å·çè·³å°ç¶åçindexãleftå»\r\n        let distance = 0;\r\n        if (index <= -1) {\r\n          distance = (lastIndex * this.elmWidth) - this.alignDistance;\r\n          this._renderer.setStyle(this.containerElm, 'left', `${-distance}px`);\r\n        } else if (index > lastIndex) {\r\n          this._renderer.setStyle(this.containerElm, 'left', `0px`);\r\n        }\r\n      }, this.aniTime);\r\n    }\r\n  }\r\n\r\n  private outOfBound(type) {\r\n    switch (type) {\r\n      case 'panleft':\r\n        return this.currentIndex >= this.lastIndex - this._showNum + 1;\r\n      case 'panright':\r\n        return this.currentIndex <= 0;\r\n    }\r\n  }\r\n\r\n  private runProgress(betweenTime): Observable<any> {\r\n    const howTimes = this.speed / betweenTime;\r\n    const everyIncrease = 100 / this.speed * betweenTime;\r\n    // console.log('progress');\r\n    return interval(betweenTime).pipe(\r\n      tap(t => {\r\n        this.progressWidth = (t % howTimes) * everyIncrease;\r\n      }),\r\n      bufferCount(Math.round(this.speed / betweenTime), 0)\r\n    );\r\n  }\r\n\r\n  private getAutoNum() {\r\n    const initNum = 3;\r\n    // 610\r\n    const width = this.rootElm.clientWidth;\r\n    if (width > 300) {\r\n      return Math.floor(initNum + (width / 200));\r\n    }\r\n    return initNum;\r\n  }\r\n\r\n  private addStyle(elm: HTMLElement, style: { [key: string]: string | number }) {\r\n    if (style) {\r\n      Object.keys(style).forEach((key) => {\r\n        const value = style[key];\r\n        this._renderer.setStyle(elm, key, value);\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { NgxHmCarouselDynamicDirective } from './ngx-hm-carousel-dynamic.directive';\r\nimport { NgxHmCarouselItemDirective } from './ngx-hm-carousel-item.directive';\r\nimport { NgxHmCarouselComponent } from './ngx-hm-carousel.component';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n  ],\r\n  declarations: [\r\n    NgxHmCarouselComponent,\r\n    NgxHmCarouselItemDirective,\r\n    NgxHmCarouselDynamicDirective\r\n  ],\r\n  exports: [\r\n    NgxHmCarouselComponent,\r\n    NgxHmCarouselItemDirective,\r\n    NgxHmCarouselDynamicDirective\r\n  ]\r\n})\r\nexport class NgxHmCarouselModule { }\r\n"],"names":["Directive","ViewContainerRef","TemplateRef","Input","EventEmitter","Output","Observable","debounceTime","tap","finalize","BehaviorSubject","Subject","isPlatformBrowser","merge","fromEvent","switchMap","takeUntil","interval","bufferCount","Component","ViewEncapsulation","Inject","PLATFORM_ID","Renderer2","ViewChild","ContentChildren","ContentChild","NgModule","CommonModule","FormsModule"],"mappings":"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"}
