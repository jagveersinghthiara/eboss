import { AfterViewInit, EventEmitter, OnDestroy } from '@angular/core';
import { WebcamInitError } from "../domain/webcam-init-error";
import { WebcamImage } from "../domain/webcam-image";
import { Observable } from "rxjs/Observable";
export declare class WebcamComponent implements AfterViewInit, OnDestroy {
    /** Defines the max width of the webcam area in px */
    width: number;
    /** Defines the max height of the webcam area in px */
    height: number;
    /** If this Observable emits, an image will be captured and emitted through 'imageCapture' EventEmitter */
    private _trigger;
    private triggerSubscription;
    /** MediaStream object in use for streaming UserMedia data */
    private mediaStream;
    /** EventEmitter which fires when an image has been captured */
    imageCapture: EventEmitter<WebcamImage>;
    /** Emits a mediaError if webcam cannot be initialized (e.g. missing user permissions) */
    initError: EventEmitter<WebcamInitError>;
    /** Emits when the webcam video was clicked */
    imageClick: EventEmitter<void>;
    private video;
    private canvas;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    /**
     * If the given Observable emits, an image will be captured and emitted through 'imageCapture' EventEmitter
     */
    trigger: Observable<void>;
    /**
     * Takes a snapshot of the current webcam's view and emits the image as an event
     */
    takeSnapshot(): void;
    /**
     * Init webcam live view
     */
    private initWebcam();
    /**
     * Stops all active media tracks.
     * This prevents the webcam from being indicated as active,
     * even if it is no longer used by this component.
     */
    private stopMediaTracks();
    /**
     * Unsubscribe from all open subscriptions
     */
    private unsubscribeFromSubscriptions();
}
